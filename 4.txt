1. Make a list of all project numbers for projects that involve an employee whose name is "Rahul", either as a worker or as a manager of the department that controls the project
2. Show the resulting salaries if every employee working on the "IoT" project is given a 10 percent raise
3. Find thes sum of the salaries of all employees of the "Accounts" department, as well as the maximum salary, the minimum salary, and the average salaary in this department
4. Retrieve the name of each employee who works on all the projects controlled by department number 5 (use NOT EXISTS operator).
5. Create a view Dept_info that gives details of department name, Number of employees and total salary of each department

DROP TABLE DEPENDENT;
DROP TABLE WORKS_ON;
DROP TABLE PROJECT;
DROP TABLE DLOCATION;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE DEPARTMENT CASCADE CONSTRAINTS;

CREATE TABLE DEPARTMENT(
	DNO INT,
	DNAME VARCHAR (30),
	MGR_SSN VARCHAR(10),
	MGR_START_DATE DATE,
	PRIMARY KEY (DNO)
);
INSERT INTO DEPARTMENT VALUES('1','ACCOUNTS', NULL, '25-MAR-18');
INSERT INTO DEPARTMENT VALUES('2','DEVELOPER', NULL, '25-JUL-17');
INSERT INTO DEPARTMENT VALUES('3','ESTABLISHMENT', NULL, '16-DEC-15');
INSERT INTO DEPARTMENT VALUES('4','FINANCE', NULL, '08-JAN-11');
INSERT INTO DEPARTMENT VALUES('5','ACCOUNTS', NULL, '11-NOV-09');


CREATE TABLE EMPLOYEE(
	SSN VARCHAR(10),
	NAME VARCHAR(20),
	ADDRESS VARCHAR(20),
	GENDER CHAR(6),
	SALARY DECIMAL (10,3),
	SUPER_SSN VARCHAR(10),
	DNO INT,
	PRIMARY KEY (SSN),
	FOREIGN KEY (SUPER_SSN) REFERENCES EMPLOYEE (SSN) ON DELETE CASCADE,
	FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO) ON DELETE CASCADE
);
INSERT INTO EMPLOYEE VALUES('E1','RAHUL','MANIPAL','M','100000',NULL, '1');
INSERT INTO EMPLOYEE VALUES('E2','PRIYANKSHEE','MANGALORE','F','800000',NULL, '3');
INSERT INTO EMPLOYEE VALUES('E3','VEJA','KADRI','F','500000',NULL, '2');
INSERT INTO EMPLOYEE VALUES('E4','RAJESH','MUDIPU','M','90000',NULL, '5');
INSERT INTO EMPLOYEE VALUES('E5','RAHUL','JEPPU','M','300000',NULL, '4');


CREATE TABLE DLOCATION(
	DNO INT,
	DLOC VARCHAR(20),
	PRIMARY KEY (DNO,DLOC),
	FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO) ON DELETE CASCADE
);
INSERT INTO DLOCATION VALUES('1','MANIPAL');
INSERT INTO DLOCATION VALUES('5','MANGALORE');
INSERT INTO DLOCATION VALUES('4','KUMBLE');
INSERT INTO DLOCATION VALUES('3','JEPPU');
INSERT INTO DLOCATION VALUES('2','KADRI');

CREATE TABLE PROJECT (
	PNO INT,
	PNAME VARCHAR(20),
	PLOCATION VARCHAR(20),
	DNO INT,
	PRIMARY KEY (PNO),
	FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO)  ON DELETE CASCADE
);
INSERT INTO PROJECT VALUES('1','IOT','MUMBAI','5');
INSERT INTO PROJECT VALUES('2','EMBEDDED SYSTEMS','BANGALORE','4');
INSERT INTO PROJECT VALUES('5','FOREST DEPARTMENT','KADRI','3');
INSERT INTO PROJECT VALUES('4', 'GOVERNMNET APP', 'KUMBLE', '2');
INSERT INTO PROJECT VALUES('3', 'BANK SOFTWARE','MANIPAL','1');

CREATE TABLE WORKS_ON(
	SSN VARCHAR(20),
	PNO INT,
	HOURS INT,
	PRIMARY KEY (SSN,PNO),
	FOREIGN KEY (SSN) REFERENCES EMPLOYEE (SSN) ON DELETE CASCADE,
	FOREIGN KEY (PNO) REFERENCES PROJECT(PNO) ON DELETE CASCADE
);

INSERT INTO WORKS_ON VALUES('E1','1','8');
INSERT INTO WORKS_ON VALUES('E2','2','9');
INSERT INTO WORKS_ON VALUES('E3','3','6');
INSERT INTO WORKS_ON VALUES('E4','4','5');
INSERT INTO WORKS_ON VALUES('E5','5','10');

CREATE TABLE DEPENDENT(
	SSN VARCHAR(20),
	DEP_NAME VARCHAR(20),
	GENDER CHAR(6),
	BDATE DATE,
	RELATIONSHIP CHAR(10),
	PRIMARY KEY (SSN,DEP_NAME),
	FOREIGN KEY (SSN) REFERENCES EMPLOYEE (SSN) ON DELETE CASCADE
);

ALTER TABLE DEPARTMENT
ADD CONSTRAINT C_MSSN
FOREIGN KEY (MGR_SSN) REFERENCES EMPLOYEE ON DELETE CASCADE;


UPDATE DEPARTMENT SET MGR_SSN = 'E4' WHERE DNO='5';
UPDATE DEPARTMENT SET MGR_SSN = 'E1' WHERE DNO='1';
UPDATE DEPARTMENT SET MGR_SSN = 'E3' WHERE DNO='2';
UPDATE DEPARTMENT SET MGR_SSN = 'E2' WHERE DNO='3';
UPDATE DEPARTMENT SET MGR_SSN = 'E5' WHERE DNO='4';

#1
(SELECT DISTINCT P.PNO 
FROM PROJECT P, EMPLOYEE E, DEPARTMENT D 
WHERE E.SSN = D.MGR_SSN AND D.DNO = P.DNO AND E.NAME='RAHUL')
UNION
(SELECT DISTINCT P.PNO FROM PROJECT P, EMPLOYEE E, WORKS_ON W
WHERE E.SSN=W.SSN AND P.PNO = W.PNO AND E.NAME ='RAHUL');
===========================================
       PNO
----------
         1
         2
         3
         5
==========================================

#2
SELECT E.NAME, 1.1*SALARY AS INCREASED_SALARY 
FROM EMPLOYEE E, PROJECT P, WORKS_ON W 
WHERE E.SSN=W.SSN AND P.PNO = W.PNO AND P.PNAME = 'IOT';
===============================================
NAME                 INCREASED_SALARY
-------------------- ----------------
RAHUL                          110000
===================================================

#3
SELECT SUM (SALARY), MAX(SALARY), MIN(SALARY), AVG(SALARY)
FROM EMPLOYEE E, DEPARTMENT D WHERE E.DNO= D.DNO AND D.DNAME = 'ACCOUNTS';
========================================================

SUM(SALARY) MAX(SALARY) MIN(SALARY) AVG(SALARY)
----------- ----------- ----------- -----------
     190000      100000       90000       95000
========================================================

#4
SELECT E.NAME FROM EMPLOYEE E WHERE NOT EXISTS
((SELECT P.PNO FROM PROJECT P WHERE P.DNO=5) MINUS
(SELECT W.PNO FROM WORKS_ON W WHERE E.SSN=W.SSN)
);
=========================================================

NAME
--------------------
RAHUL
==========================================


#5
CREATE VIEW DEPT_INFO AS
SELECT D.DNAME, COUNT(*) AS EMP_COUNT, SUM(E.SALARY) AS TOTAL_SALARY
FROM DEPARTMENT D, EMPLOYEE E
WHERE D.DNO=E.DNO
GROUP BY D.DNAME;
SELECT * FROM DEPT_INFO;
=================================================

DNAME                           EMP_COUNT TOTAL_SALARY
------------------------------ ---------- ------------
ACCOUNTS                                2       190000
FINANCE                                 1       300000
ESTABLISHMENT                           1       800000
DEVELOPER                               1       500000

===================================================